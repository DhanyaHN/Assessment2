package hello;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;

import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class HugeInteger {
	
	Integer[] hugeInteger;
	
	
	public HugeInteger(){
		System.out.println("haha");
	}
	
	@RequestMapping("/parse")
	public void parse(@RequestParam(value = "integer") String hgInt){
		hugeInteger = new Integer[hgInt.length()];
		for (int i = 0; i < hgInt.length(); i++)
			hugeInteger[i] = (int)hgInt.charAt(i); 
		
	}
	
	public void add(){
		
	}
	
	public void subtract(){
		
	}
	
	public boolean isEqualTo(HugeInteger hi){
		return false;
	}
	
	public boolean isNotEqualTo(HugeInteger hi){
		return false;
	}
	
	public boolean isGreaterThan(HugeInteger hi){
		return false;
	}
	
	public boolean isLessThan(HugeInteger hi){
		return false;
	}
	
	public boolean isGreaterThanOrEqualTo(HugeInteger hi){
		return false;
	}
	
	public boolean isLessThanOrEqualTo(HugeInteger hi){
		return false;
		
	}
	
	Predicate<Integer> isZero = new Predicate<Integer>() {
	   
		@Override
		public boolean test(Integer t) {
			// TODO Auto-generated method stub
			return t != 0;
		}       
	};
	
	@RequestMapping("/Zero")
	public boolean isZero(){
		List<Integer> numList = Arrays.asList(hugeInteger);
		return numList.stream()
		.map(t -> t == 0)
		.reduce(true, (x,y) -> x && y);
	}
	
	@RequestMapping("/Welcome")
	public String index(){
		return "Welcome to HugeInteger";
	}
	
	@RequestMapping("/Test")
	public String test(@RequestParam(value="name") String name){
		return name;
	}
	
	@RequestMapping("/toString")
	public String toString(){
		StringBuilder hgInt = new StringBuilder();
		for (int i:hugeInteger)
			hgInt.append(i);
		
		return hgInt.toString();
	}
	

}
